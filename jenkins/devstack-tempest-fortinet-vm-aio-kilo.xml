<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>10</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_CHANGE_NUMBER</name>
          <description></description>
          <defaultValue>periodical</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_PATCHSET_NUMBER</name>
          <description></description>
          <defaultValue>build</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LOG_PATH</name>
          <description></description>
          <defaultValue>$GERRIT_CHANGE_NUMBER/$GERRIT_PATCHSET_NUMBER/$JOB_NAME/$BUILD_NUMBER</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkins.plugins.lockableresources.RequiredResourcesProperty plugin="lockable-resources@1.7">
      <resourceNamesVar>FGTVM_USED</resourceNamesVar>
      <resourceNumber>1</resourceNumber>
      <labelName>fortivm</labelName>
    </org.jenkins.plugins.lockableresources.RequiredResourcesProperty>
    <com.synopsys.arc.jenkinsci.plugins.jobrestrictions.jobs.JobRestrictionProperty plugin="job-restrictions@0.4"/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>devstack-vm</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger plugin="gerrit-trigger@2.14.0">
      <spec></spec>
      <gerritProjects>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          <compareType>PLAIN</compareType>
          <pattern>networking-fortinet</pattern>
          <branches>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>PLAIN</compareType>
              <pattern>stable/kilo</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
          </branches>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
      </gerritProjects>
      <skipVote>
        <onSuccessful>false</onSuccessful>
        <onFailed>false</onFailed>
        <onUnstable>false</onUnstable>
        <onNotBuilt>false</onNotBuilt>
      </skipVote>
      <silentMode>false</silentMode>
      <notificationLevel></notificationLevel>
      <silentStartMode>false</silentStartMode>
      <escapeQuotes>false</escapeQuotes>
      <noNameAndEmailParameters>false</noNameAndEmailParameters>
      <dependencyJobsNames></dependencyJobsNames>
      <readableMessage>false</readableMessage>
      <buildStartMessage></buildStartMessage>
      <buildFailureMessage></buildFailureMessage>
      <buildSuccessfulMessage></buildSuccessfulMessage>
      <buildUnstableMessage></buildUnstableMessage>
      <buildNotBuiltMessage></buildNotBuiltMessage>
      <buildUnsuccessfulFilepath></buildUnsuccessfulFilepath>
      <customUrl>http://10.160.2.223:8081/logs/$LOG_PATH</customUrl>
      <serverName>10.160.2.223</serverName>
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginPatchsetCreatedEvent>
          <excludeDrafts>true</excludeDrafts>
          <excludeTrivialRebase>false</excludeTrivialRebase>
          <excludeNoCodeChange>false</excludeNoCodeChange>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginPatchsetCreatedEvent>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginCommentAddedContainsEvent>
          <commentAddedCommentContains>recheck</commentAddedCommentContains>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginCommentAddedContainsEvent>
      </triggerOnEvents>
      <dynamicTriggerConfiguration>false</dynamicTriggerConfiguration>
      <triggerConfigURL></triggerConfigURL>
      <triggerInformationAction/>
    </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.29">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>SLAVE_NODE_NAME=$NODE_NAME</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>devstack-offline-node</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -xe
# This is the job which checks out devstack-gate
if [[ ! -d devstack-gate ]]; then
    echo &quot;Cloning devstack-gate&quot;
    git clone https://github.com/openstack-infra/devstack-gate
else
    echo &quot;Fixing devstack-gate git remotes&quot;
    cd devstack-gate
    git remote set-url origin https://github.com/openstack-infra/devstack-gate
    git remote update
    git reset --hard
    if ! git clean -x -f ; then
        sleep 1
        git clean -x -f
    fi
    git checkout master
    git reset --hard remotes/origin/master
    if ! git clean -x -f ; then
        sleep 1
        git clean -x -f
    fi
    cd ..
fi


sudo rm -rf $WORKSPACE/logs /opt/stack/logs</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x
# Clean FortiGate configuration
export FGT_HOST=${FGTVM_USED}
ssh -o StrictHostKeyChecking=no -tt admin@${FGT_HOST} &lt;&lt; EOF
99
config global
execute restore config ftp jerryzhao/full_config_${FGT_HOST} ftp.fortinet.com myfortinet a11a11
y
exit
EOF
ping -c 6 -i 30 ${FGT_HOST} || exit $?

ssh -o StrictHostKeyChecking=no -tt admin@${FGT_HOST} &lt;&lt; &apos;EOF&apos; &gt; fgt.log &amp;
99
config global
diag debug enable
diag debug application httpsd 255
EOF

DEVSTACK_LOCAL_CONFIG=&quot;&quot;
if [ &quot;$GERRIT_PROJECT&quot; == &quot;networking-fortinet&quot; ]; then
    export ZUUL_PROJECT=$GERRIT_PROJECT
    export ZUUL_URL=http://$GERRIT_HOST:8080
    export ZUUL_BRANCH=$GERRIT_BRANCH
    export ZUUL_REF=$GERRIT_REFSPEC
    DEVSTACK_LOCAL_CONFIG+=&quot;enable_plugin networking-fortinet http://$GERRIT_HOST:8080/$GERRIT_PROJECT.git $GERRIT_REFSPEC;&quot;
else
    export OVERRIDE_ZUUL_BRANCH=stable/kilo
    DEVSTACK_LOCAL_CONFIG+=&quot;enable_plugin networking-fortinet http://10.160.2.223:8080/networking-fortinet.git stable/kilo;&quot;
fi

export PROJECTS=&quot;openstack/networking-fortinet $PROJECTS&quot;
# Setup environment variables for FortiGate driver test
export DEVSTACK_GATE_NEUTRON=1
DEVSTACK_LOCAL_CONFIG+=&quot;Q_USE_DEBUG_COMMAND=False;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;RECLONE=True;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_FORTINET_PLUGIN_FG_IP=${FGT_HOST};&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_FORTINET_PLUGIN_FG_INT_INF=port2;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_FORTINET_PLUGIN_FG_EXT_INF=port3;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_FORTINET_PLUGIN_FG_TENANT_NET_TYPE=vlan;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_FORTINET_TENANT_INTERFACE=eth1;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;NEUTRON_REPO=https://github.com/jerryz1982/neutron.git;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;NEUTRON_BRANCH=stable/kilo;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;TEMPEST_REPO=http://github.com/jerryz1982/tempest.git;&quot;
# TODO: change tempest temporarily to add dhcp rule and ping timeout to workaround fgt plugin bugs.
DEVSTACK_LOCAL_CONFIG+=&quot;TEMPEST_BRANCH=add_dhcp_secgrouprule;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;ML2_L3_PLUGIN=router_fortinet;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_ML2_PLUGIN_MECHANISM_DRIVERS=&apos;openvswitch,fortinet&apos;;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_ML2_PLUGIN_VLAN_TYPE_OPTIONS=&apos;network_vlan_ranges=physnet1:1030:1049&apos;;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_ML2_PLUGIN_TYPE_DRIVERS=local,flat,vlan,gre,vxlan;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_ML2_TENANT_NETWORK_TYPE=vlan;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_L3_ENABLED=True;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_L3_ROUTER_PER_TENANT=True;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;ENABLE_TENANT_VLANS=True;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;PHYSICAL_NETWORK=physnet1;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;OVS_PHYSICAL_BRIDGE=br-eth1;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_FLOATING_ALLOCATION_POOL=start=10.160.38.230,end=10.160.38.249;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;FLOATING_RANGE=10.160.38.1/24;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;PUBLIC_NETWORK_GATEWAY=10.160.38.1;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_USE_DEBUG_COMMAND=False;&quot;
DEVSTACK_LOCAL_CONFIG+=&quot;Q_FORTINET_PLUGIN_NPU_AVAILABLE=False;&quot;
export DEVSTACK_LOCAL_CONFIG+=&quot;HOST_IP_IFACE=eth0&quot;
export OVERRIDE_ENABLED_SERVICES=horizon,q-svc,q-agt,key,g-api,g-reg,n-api,n-crt,n-obj,n-cpu,n-cond,n-sch,n-xvnc,n-cauth,rabbit,tempest,mysql
export DEVSTACK_GATE_TEMPEST=1
export DEVSTACK_GATE_TIMEOUT=120
export TEMPEST_CONCURRENCY=1
export DEVSTACK_GATE_TEMPEST_REGEX=&quot;tempest.api.network.test_networks_negative \
tempest.api.network.test_networks.NetworksTest \
tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_network_basic_ops \
tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_connectivity_between_vms_on_different_networks \
tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_hotplug_nic \
tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_update_instance_port_admin_state \
tempest.scenario.test_network_advanced_server_ops.TestNetworkAdvancedServerOps&quot;


echo &quot;Copying devstack-vm-gate-wrap.sh&quot;
cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
echo &quot;Running safe-devstack-vm-gate-wrap.sh&quot;
./safe-devstack-vm-gate-wrap.sh
# Save the return value so we can exit with this
DGRET=$?

# archive fgt config after test
ssh -o StrictHostKeyChecking=no -tt admin@${FGT_HOST} &lt;&lt; EOF
-1
config global
execute backup full-config tftp config_${GERRIT_CHANGE_NUMBER}_${GERRIT_PATCHSET_NUMBER}_${BUILD_NUMBER} 10.160.2.223
exit
EOF

exit $DGRET</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <be.certipost.hudson.plugin.SCPRepositoryPublisher plugin="scp@1.9-SNAPSHOT">
      <siteName>log server</siteName>
      <entries>
        <be.certipost.hudson.plugin.Entry>
          <filePath>logs/$LOG_PATH</filePath>
          <sourceFile>logs/**</sourceFile>
          <keepHierarchy>true</keepHierarchy>
          <copyConsoleLog>false</copyConsoleLog>
          <copyAfterFailure>true</copyAfterFailure>
        </be.certipost.hudson.plugin.Entry>
        <be.certipost.hudson.plugin.Entry>
          <filePath>logs/$LOG_PATH</filePath>
          <sourceFile></sourceFile>
          <keepHierarchy>false</keepHierarchy>
          <copyConsoleLog>true</copyConsoleLog>
          <copyAfterFailure>true</copyAfterFailure>
        </be.certipost.hudson.plugin.Entry>
        <be.certipost.hudson.plugin.Entry>
          <filePath>logs/$LOG_PATH</filePath>
          <sourceFile>fgt.log</sourceFile>
          <keepHierarchy>false</keepHierarchy>
          <copyConsoleLog>false</copyConsoleLog>
          <copyAfterFailure>true</copyAfterFailure>
        </be.certipost.hudson.plugin.Entry>
      </entries>
    </be.certipost.hudson.plugin.SCPRepositoryPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.29">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>SLAVE_NODE_NAME=$NODE_NAME</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>devstack-restore-node</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.7.2"/>
  </buildWrappers>
</project>